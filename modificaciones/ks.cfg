###############################################
# Begin %pre configuration script             #
###############################################
%pre --interpreter=/bin/bash --log=/dev/tty3
PATH=$PATH:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin
# Setup the env (setting /dev/tty3 as default IO)
chvt 3
exec < /dev/tty3 > /dev/tty3 2>/dev/tty3
function pause() {
  local continue
  echo "Pausado. Pulsa cualquier tecla para continuar..."
  read -n1 -s continue
  echo ""  # Salto de línea después de que se presione la tecla
}
# Función para generar un hostname aleatorio si no se proporciona uno
generate_random_hostname() {
    echo "rocky-$(head /dev/urandom | tr -dc 'a-z0-9' | head -c 4)"
}
kernel_hostname=$(cat /proc/cmdline | grep -oP 'hostname=\K\S+')
rhostname=$(generate_random_hostname)

if [ -z "$kernel_hostname" ]; then
  echo "El hostname actual es $rhostname"
  read -t 10 -p "Necesitas otro nombre? Tienes 10 segundos: " input_hostname
  if [ -z "$input_hostname" ]; then
    hostname=$rhostname
    echo "El hostname será $hostname"
  else
    hostname=$input_hostname
    echo "El hostname será $hostname"
  fi
else
    hostname=$kernel_hostname
    echo "El hostname será $hostname"
fi
chvt 1
exec < /dev/tty1 > /dev/tty1 2>/dev/tty1
%end
# End %pre configuration script #


###############################################
# Proceso de instalación                      #
###############################################

selinux --disabled
firewall --disabled
firstboot --disabled
services --enabled=sshd
services --enabled=tmp.mount
logging --host=10.0.0.8 --port=514
keyboard --vckeymap=es --xlayouts=es
lang es_ES.UTF-8 --addsupport en_US.UTF-8
timezone Europe/Madrid
network --bootproto=dhcp --device=link --noipv6 --activate
timesource --ntp-server=10.0.0.1 --ntp-server=es.pool.ntp.org

# Discos
clearpart --all --drives=sda --initlabel
part /boot/efi --fstype=efi --size=600 --fsoptions="umask=0077"
part /boot --fstype=ext4 --size=1024
part pv.01 --grow --size=1
volgroup VolGroup --pesize=4096 pv.01
logvol / --fstype=ext4 --name=root --vgname=VolGroup --size=1 --grow --label=root
logvol /home --fstype=ext4 --name=home --vgname=VolGroup --size=10240 --label=home
bootloader --location=mbr --boot-drive=sda

# Repos y fuentes
url --url=http://mirror.uv.es/mirror/rocky-linux/9.4/BaseOS/x86_64/os/
repo --name="epel_9" --baseurl=https://dl.fedoraproject.org/pub/epel/9/Everything/x86_64/ --cost=200 --install
repo --name="docker" --baseurl=https://download.docker.com/linux/centos/9/x86_64/stable/  --install
repo --name="kubernetes" --baseurl=https://pkgs.k8s.io/core:/stable:/v1.30/rpm/ --install
repo --name="crb" --baseurl=http://mirror.uv.es/mirror/rocky-linux/9.4/CRB/x86_64/os/ --install
# Usuarios
rootpw $2b$10$GKXntdNJIML.VxKLDwhi5ucBa44bTkP0FGLg0zgn5PBQUF1HNL8hO --iscrypted --allow-ssh
user --name=oloco --password=$2b$10$GKXntdNJIML.VxKLDwhi5ucBa44bTkP0FGLg0zgn5PBQUF1HNL8hO --iscrypted --gecos="oloco" --shell=/bin/bash --uid=1000 --gid=1000 --groups=root,docker,wheel,sudo,sudoers

# group --name NAME [--gid GID]
# module --name <module_name> --disable # para el disco raid...
skipx

###############################################
# Paquetes                                    #
###############################################
%packages --retries=5 --timeout=20 --inst-langs=es,en
# @^minimal-environment
@^Development Tools
@^minimal-environment
@standard
chrony
grub2-efi
grub2-pc
grub2-tools
mlocate
mosh
nano
bash-completion
vim-enhanced
vim-common
vim-ansible
vim-powerline
vim-mediawiki
vim-jellybeans
vim-go
vim-fugitive
vim-editorconfig
awesome-vim-colorschemes
neovim
jq
curl
git-all
gnupg2
open-vm-tools
ca-certificates
iputils
bind-utils
net-tools
traceroute
man-db
man-db-cron
man-pages-overrides
man-pages
dialog
zsh
zsh-autosuggestions
zsh-syntax-highlighting
psmisc
tree
telnet
file
rsync
rsync-daemon
python3
rsyslog
rsyslog-logrotate
openssh
expect
make
perl
patch
dkms
gcc
bzip2
cmake
lsof
nmap
environment-modules
screen
tmux
tmux-powerline
cifs-utils
nfs-utils
zip
p7zip
mtools
-iwl*-firmware
-aspell-*
-desktop-backgrounds-basic
-gimp-help
-gnome-shell
-hplip
-isdn4k-utils
-mpage
-sane-backends
-shim-unsigned-*64
-xfce4-eyes-plugin
-xfce4-sensors-plugin
-xsane
-xsane-gimp
%end
# End %packages configuration script #

###############################################
# Begin %post configuration                   #
###############################################
%post
hostnamectl set-hostname $hostname
sed -i "s/^PermitRootLogin.*/#&\nPermitRootLogin yes/g" /etc/ssh/sshd_config
echo "oloco        ALL=(ALL)       NOPASSWD: ALL" >> /etc/sudoers.d/oloco
# Es bueno usar el fs tempfs para que las escrituras en tmp se hagan en ram en vez de ssd:
cat >> /etc/fstab << EOF
tmpfs    /tmp        tmpfs   defaults   0 0
vartmp   /var/tmp    tmpfs   defaults   0 0
EOF
systemctl enable tmp.mount
# go ahead and pre-make the man -k cache (#455968)
/usr/bin/mandb
# make sure there aren't core files lying around
rm -f /core*
# remove random seed, the newly installed instance should make it's own
rm -f /var/lib/systemd/random-seed
# Drop the rescue kernel and initramfs, we don't need them on the live media itself.
# See bug 1317709
rm -f /boot/*-rescue*
#Habilitamos repositorio Codeready
/usr/bin/dnf config-manager --set-enabled crb

%end
# End %post configuration script #

reboot
###########################
